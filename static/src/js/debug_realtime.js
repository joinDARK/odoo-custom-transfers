/** @odoo-module **/

import { registry } from "@web/core/registry";

// –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å
const debugRealtimeService = {
    dependencies: ["bus_service"],
    
    start(env, { bus_service }) {
        console.log("üîß DEBUG: Real-time debug service starting...");
        
        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –≤—Å–µ bus —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏  
        bus_service.addEventListener("notification", ({ detail: notifications }) => {
            console.log("üîß DEBUG: Bus notification received:", notifications);
            console.log("üîß DEBUG: Total notifications count:", notifications.length);
            console.log("üîß DEBUG: Raw notifications structure:", JSON.stringify(notifications, null, 2));
            
            for (const notification of notifications) {
                console.log("üîß DEBUG: Processing notification:", notification);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
                let type, payload;
                
                if (notification.type) {
                    type = notification.type;
                    payload = notification.payload;
                } else if (Array.isArray(notification) && notification.length >= 2) {
                    console.log("üîß DEBUG: Array notification format detected");
                    type = notification[1];
                    payload = notification[2];
                } else if (notification.message) {
                    console.log("üîß DEBUG: Message property detected");
                    type = notification.message.type;
                    payload = notification.message.payload;
                } else {
                    console.log("üîß DEBUG: Unknown notification format");
                }
                
                console.log("üîß DEBUG: Extracted type:", type);
                console.log("üîß DEBUG: Extracted payload:", payload);
                
                if (type === "amanat_realtime_update") {
                    console.log("üéØ DEBUG: Amanat realtime update detected!");
                    console.log("üéØ DEBUG: Update data:", payload);
                } else {
                    console.log("üîß DEBUG: Other notification type:", type);
                }
            }
        });
        
        // –¢–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        console.log("üîß DEBUG: Current user info from session:", {
            user_id: window.odoo?.session_info?.uid,
            user_name: window.odoo?.session_info?.user_name,
            session_info: window.odoo?.session_info
        });
        
        console.log("üîß DEBUG: Real-time debug service started successfully");
        
        return {
            logMessage: (message) => {
                console.log("üîß DEBUG:", message);
            }
        };
    }
};

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å
registry.category("services").add("debug_realtime", debugRealtimeService);

console.log("üîß DEBUG: Debug realtime service registered"); 